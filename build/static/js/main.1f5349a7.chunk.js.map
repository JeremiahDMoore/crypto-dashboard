{"version":3,"sources":["components/NewsFeed.js","components/ExchangeRate.js","components/CurrencyConverter.js","components/Resources.js","App.js","index.js"],"names":["require","config","NewsFeed","useState","articles","setArticles","useEffect","axios","request","method","url","headers","then","response","console","log","data","catch","error","first7Articles","slice","className","map","article","_index","href","target","rel","title","date","ExchangeRate","exchangeRate","chosenPrimaryCurrency","chosenSecondaryCurrency","CurrencyConverter","setChosenPrimaryCurrency","setChosenSecondaryCurrency","amount","setAmount","setExchangeRate","result","setResult","value","name","onChange","e","currency","type","disabled","onClick","options","params","from_currency","function","to_currency","process","Resources","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5349a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nrequire('dotenv').config()\r\n\r\nconst NewsFeed = () => {\r\n  const [articles, setArticles] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://crypto-news16.p.rapidapi.com/news/top/25',\r\n      headers: {\r\n        'X-RapidAPI-Key': '14e6db2ea2mshd3417466d04fac6p1ac271jsnc70a82dde267',\r\n        'X-RapidAPI-Host': 'crypto-news16.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n    axios.request(options).then(function (response) {\r\n      console.log(response.data);\r\n      setArticles(response.data);\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n  }, []);\r\n\r\n  const first7Articles = articles ? articles.slice(0, 25) : null;\r\n\r\n  return (\r\n    <div className=\"news-feed\">\r\n      <h2>Today's Top 25 News Stories</h2>\r\n      \r\n      <div className=\"news-feed-elements\">\r\n        {first7Articles?.map((article, _index) => (\r\n          <div key={_index}  > \r\n            <a href={article.url} target=\"_blank\" rel=\"noreferrer\"><p>{_index + 1}. {article.title}<br></br>{article.date}</p></a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsFeed;\r\n","import React from 'react';\r\n\r\nconst ExchangeRate = ({exchangeRate, chosenPrimaryCurrency, chosenSecondaryCurrency}) => {\r\n    return (\r\n      <div className=\"exchange-rate\">\r\n        <span>Exchange Rate</span>\r\n        <h1>{exchangeRate}</h1>\r\n        {chosenPrimaryCurrency} to {chosenSecondaryCurrency}\r\n      </div>\r\n    )\r\n  }  \r\n  export default ExchangeRate\r\n  ","import React from 'react';\r\n\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport ExchangeRate from \"./ExchangeRate\"\r\n\r\nrequire('dotenv').config()\r\n\r\nconst CurrencyConverter = () => {\r\n    const currencies = ['BTC', 'ETH', 'MANA', 'ALGO', 'SAND', 'FTT', 'SOL', 'USDC']\r\n    const currencies_two = ['USD', 'EUR', 'BTC', 'ETH', 'MANA', 'ALGO', 'SAND', 'FTT', 'SOL']\r\n    const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState('BTC')\r\n    const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState('USD')\r\n    const [amount, setAmount] = useState(1)\r\n    const [exchangeRate, setExchangeRate] = useState(0)\r\n    const [result, setResult] = useState(0)\r\n\r\n    console.log(chosenPrimaryCurrency, chosenSecondaryCurrency, amount)\r\n    const convert = () => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://alpha-vantage.p.rapidapi.com/query',\r\n            params: {from_currency: chosenPrimaryCurrency, function: 'CURRENCY_EXCHANGE_RATE', to_currency: chosenSecondaryCurrency},\r\n            headers: {\r\n                'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com',\r\n                'x-rapidapi-key': process.env.REACT_APP_CURRENCY_CONVERTER_KEY\r\n            }\r\n        }\r\n\r\n        axios.request(options).then((response) =>{\r\n\t        console.log(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\r\n            setExchangeRate(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\r\n            setResult(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'] * amount)\r\n        }).catch((error) => {\r\n        \tconsole.error(error)\r\n        })\r\n    }\r\n\r\n    console.log(exchangeRate)\r\n\r\n    return (\r\n      <div className=\"currency-converter\">\r\n        <h2>Crypto Converter</h2>\r\n        <div className=\"input-box\">          \r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>From:</td>                    \r\n                    <td>\r\n                        <select\r\n                            value={chosenPrimaryCurrency}\r\n                            name=\"currency-option-1\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenPrimaryCurrency(e.target.value)}                                                      \r\n                        \r\n                        >  \r\n                         {currencies.map((currency, _index) => (<option key={_index}>{currency}</option>))}\r\n\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"currency-amount-1\"\r\n                            value={amount}\r\n                            onChange={(e) => setAmount(e.target.value)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>To:</td>\r\n                    <td>\r\n                        <select\r\n                            value={chosenSecondaryCurrency}\r\n                            name=\"currency-option-2\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenSecondaryCurrency(e.target.value)}\r\n                                                          \r\n                        \r\n                        >\r\n                            {currencies_two.map((currency, _index) => (<option key={_index}>{currency}</option>))}\r\n\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            \r\n                            name=\"currency-amount-2\"\r\n                            value={result}\r\n                            disabled={true}\r\n                        />\r\n                    </td>\r\n                    \r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <br></br>\r\n        <button className=\"convert-button\" onClick={convert}>Convert</button>\r\n        \r\n        </div>\r\n        <br></br>\r\n        <ExchangeRate\r\n            exchangeRate={exchangeRate}            \r\n            chosenPrimaryCurrency={chosenPrimaryCurrency}\r\n            chosenSecondaryCurrency={chosenSecondaryCurrency}\r\n        \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default CurrencyConverter\r\n  ","import React from 'react';\r\n\r\nconst Resources = () => {\r\n\r\n    return (\r\n      <div className=\"resources-area\">  \r\n         \r\n        Resource Links:\r\n        <div className=\"res-area\">\r\n            <a href=\"https://messari.io/\" rel = \"noreferrer\" target = \"_blank\">\r\n              <h3>Messari - charts, technical analysis, news</h3></a>\r\n            <a href=\"https://www.coingecko.com/en\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinGecko - current values, market cap ranking and portfolio</h3></a>\r\n            <a href=\"https://coinmarketcap.com/\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinMarketCap - charts, current values, market cap ranking</h3></a>\r\n            <a href=\"https://coinmarketcal.com/en/\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinmarketCAL - calendar of crypto events</h3></a>            \r\n            <a href=\"https://www.coinbase.com/ventures\" rel = \"noreferrer\" target = \"_blank\"><h3>Coinbase Ventures - what Coinbase is investing in</h3></a>\r\n            {/* <a href=\"https://trezor.io/\" rel = \"noreferrer\" target = \"_blank\"><h3>Trezor</h3></a> */}\r\n        </div>        \r\n      </div>\r\n    )\r\n  }  \r\n  export default Resources ","\nimport React from 'react';\n\nimport NewsFeed from \"./components/NewsFeed\"\nimport CurrencyConverter from './components/CurrencyConverter';\nimport Resources from \"./components/Resources\";\n// import Ticker from \"./components/Ticker\"\n// marquee for ticker or reminder, quote, etc.\nconst marquee = \"Login, Portfolio and more Crypto support coming soon!\"\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <div className=\"ticker-wrap\">\n        <div className=\"ticker\">\n          <div className=\"ticker__item\">{marquee}</div>          \n        </div>\n      </div>\n      <NewsFeed />\n      <CurrencyConverter />\n      <Resources /> \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App' \r\n\r\nimport \"../src/index.css\";\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}