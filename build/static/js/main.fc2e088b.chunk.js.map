{"version":3,"sources":["components/NewsFeed.js","components/ExchangeRate.js","components/CurrencyConverter.js","components/Resources.js","App.js","index.js"],"names":["require","config","NewsFeed","useState","articles","setArticles","useEffect","axios","request","method","url","headers","process","then","response","console","log","data","catch","error","first7Articles","slice","className","map","article","_index","href","target","rel","title","date","ExchangeRate","exchangeRate","chosenPrimaryCurrency","chosenSecondaryCurrency","CurrencyConverter","setChosenPrimaryCurrency","setChosenSecondaryCurrency","amount","setAmount","setExchangeRate","result","setResult","value","name","onChange","e","currency","type","disabled","onClick","options","params","from_currency","function","to_currency","Resources","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc2e088b.chunk.js","sourcesContent":["import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nrequire('dotenv').config()\r\n// gets data from newsfeed api\r\nconst NewsFeed = () => {\r\n    const [articles, setArticles] = useState(null);\r\n\r\n    useEffect(() => {\r\n        \r\n      const options = {\r\n        method: 'GET',\r\n        url: 'https://crypto-news-live3.p.rapidapi.com/news',\r\n        headers: {\r\n          'X-RapidAPI-Host': 'crypto-news-live3.p.rapidapi.com',\r\n          'X-RapidAPI-Key': process.env.REACT_APP_NEWS_FEED_KEY\r\n        }\r\n      };\r\n\r\naxios.request(options).then((response) => {\r\n\tconsole.log(response.data)\r\n    setArticles(response.data)\r\n}).catch((error) => {\r\n\tconsole.error(error)\r\n});\r\n    }, [])\r\n    const first7Articles = articles ? articles.slice(1, 100) : null;\r\n    // added target=\"_blank\" to open links in new tab\r\n    return (\r\n      <div className=\"news-feed\">\r\n        <h2>Today's Top 100</h2>\r\n        <div className=\"news-feed-elements\">        \r\n        {first7Articles?.map((article, _index) => (\r\n        <div key={_index}  > \r\n            <a href={article.url} target=\"_blank\" rel=\"noreferrer\"><p>{_index + 1}. {article.title}<br></br>{article.date}</p></a>\r\n        </div>))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default NewsFeed\r\n  ","\r\nconst ExchangeRate = ({exchangeRate, chosenPrimaryCurrency, chosenSecondaryCurrency}) => {\r\n    return (\r\n      <div className=\"exchange-rate\">\r\n          <h3>Exchange Rate</h3>\r\n        <h1>{exchangeRate}</h1>\r\n        <p>{chosenPrimaryCurrency} to {chosenSecondaryCurrency}</p>\r\n      </div>\r\n    )\r\n  }  \r\n  export default ExchangeRate\r\n  ","\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport ExchangeRate from \"./ExchangeRate\"\r\n\r\nrequire('dotenv').config()\r\n\r\nconst CurrencyConverter = () => {\r\n    const currencies = ['BTC', 'ETH', 'MANA', 'ALGO', 'SAND', 'FTT', 'SOL', 'USDC']\r\n    const currencies_two = ['USD', 'EUR', 'BTC', 'ETH', 'MANA', 'ALGO', 'SAND', 'FTT', 'SOL']\r\n    const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState('BTC')\r\n    const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState('USD')\r\n    const [amount, setAmount] = useState(1)\r\n    const [exchangeRate, setExchangeRate] = useState(0)\r\n    const [result, setResult] = useState(0)\r\n\r\n    console.log(chosenPrimaryCurrency, chosenSecondaryCurrency, amount)\r\n    const convert = () => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://alpha-vantage.p.rapidapi.com/query',\r\n            params: {from_currency: chosenPrimaryCurrency, function: 'CURRENCY_EXCHANGE_RATE', to_currency: chosenSecondaryCurrency},\r\n            headers: {\r\n                'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com',\r\n                'x-rapidapi-key': process.env.REACT_APP_CURRENCY_CONVERTER_KEY\r\n            }\r\n        }\r\n\r\n        axios.request(options).then((response) =>{\r\n\t        console.log(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\r\n            setExchangeRate(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'])\r\n            setResult(response.data['Realtime Currency Exchange Rate']['5. Exchange Rate'] * amount)\r\n        }).catch((error) => {\r\n        \tconsole.error(error)\r\n        })\r\n    }\r\n\r\n    console.log(exchangeRate)\r\n\r\n    return (\r\n      <div className=\"currency-converter\">\r\n        <h2>Crypto Converter</h2>\r\n        <div className=\"input-box\">          \r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>From:</td>                    \r\n                    <td>\r\n                        <select\r\n                            value={chosenPrimaryCurrency}\r\n                            name=\"currency-option-1\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenPrimaryCurrency(e.target.value)}                                                      \r\n                        \r\n                        >  \r\n                         {currencies.map((currency, _index) => (<option key={_index}>{currency}</option>))}\r\n\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"currency-amount-1\"\r\n                            value={amount}\r\n                            onChange={(e) => setAmount(e.target.value)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>To:</td>\r\n                    <td>\r\n                        <select\r\n                            value={chosenSecondaryCurrency}\r\n                            name=\"currency-option-2\"\r\n                            className=\"currency-options\"\r\n                            onChange={(e) => setChosenSecondaryCurrency(e.target.value)}\r\n                                                          \r\n                        \r\n                        >\r\n                            {currencies_two.map((currency, _index) => (<option key={_index}>{currency}</option>))}\r\n\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            \r\n                            name=\"currency-amount-2\"\r\n                            value={result}\r\n                            disabled={true}\r\n                        />\r\n                    </td>\r\n                    \r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <br></br>\r\n        <button className=\"convert-button\" onClick={convert}>Convert</button>\r\n        \r\n        </div>\r\n        <br></br>\r\n        <ExchangeRate\r\n            exchangeRate={exchangeRate}            \r\n            chosenPrimaryCurrency={chosenPrimaryCurrency}\r\n            chosenSecondaryCurrency={chosenSecondaryCurrency}\r\n        \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default CurrencyConverter\r\n  ","\r\nconst Resources = () => {\r\n\r\n    return (\r\n      <div className=\"resources-area\">  \r\n         \r\n        Resource Links:\r\n        <div className=\"res-area\">\r\n            <a href=\"https://messari.io/\" rel = \"noreferrer\" target = \"_blank\">\r\n              <h3>Messari</h3></a>\r\n            <a href=\"https://www.coingecko.com/en\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinGecko</h3></a>\r\n            <a href=\"https://coinmarketcap.com/\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinMarketCap</h3></a>\r\n            <a href=\"https://coinmarketcal.com/en/\" rel = \"noreferrer\" target = \"_blank\"><h3>CoinmarketCAL</h3></a>            \r\n            <a href=\"https://www.coinbase.com/ventures\" rel = \"noreferrer\" target = \"_blank\"><h3>Coinbase Ventures</h3></a>\r\n            {/* <a href=\"https://trezor.io/\" rel = \"noreferrer\" target = \"_blank\"><h3>Trezor</h3></a> */}\r\n        </div>        \r\n      </div>\r\n    )\r\n  }  \r\n  export default Resources ","\nimport NewsFeed from \"./components/NewsFeed\"\nimport CurrencyConverter from './components/CurrencyConverter';\nimport Resources from \"./components/Resources\";\n// import Ticker from \"./components/Ticker\"\n// marquee for ticker or reminder, quote, etc.\nconst marquee = \"No FOMO, No YOLO, No Yeets on shitcoins .. DYOR !!!\"\n\nconst App = () => {\n\n  return (\n    <div className=\"app\">\n      <div className=\"ticker-wrap\">\n        <div className=\"ticker\">\n          <div className=\"ticker__item\">{marquee}</div>          \n        </div>\n      </div>\n      <NewsFeed />\n      <CurrencyConverter />\n      <Resources />      \n     \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App' \r\n\r\nimport \"../src/index.css\";\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}